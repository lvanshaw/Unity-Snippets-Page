[{"title":"Movement 2D Flip for movement","content":"\n[SerializeField] private float speed;\n\nprivate void Awake(){ bosy GetComponent<Rigidbody2D>();}\n\nprivate void Update(){\n\tfloat horizontalInput = Input.GetAxis(\"Horizontal\");\n\tbody.velocity = new Vector2(horizontalInput * speed, body.velocity.y);\n\t\n\tif(horizontalInput > 0.01f)\n\t\ttransfor.localScale = Vector3.one;\n\telse if(horizontalInput < 0.01f)\n\t\ttransfor.localScale = new Vector3(-1, 1, 1)\n\t\t\n\tif(Input.GetKey(KeyCode.Space))\n\t\tbody.velocity = new Vector2(body.velocity.x, speed);\n}"},{"title":"HealthBar - TakeDamage() & Heal()","content":"using UnityEngine.UI;\n\npublic class HealthManage:MonoBehaviour{\n\tpublic Image healthBar;\n\tpublic float healtAmount = 100f;\n\t\n\tpublic Start(){}\n\tpublic Update(){\n\t\tif(healthAmount <=0) Application.LoadLevel(Application.loadedLevel);\n\t\t\n\t\tif(Input.GetKeyDown(KeyCode.Return) TakeDamage(20);\n\t\t\n\t\tif(Input.GetKeyDown(KeyCode.Space) Heal(5);\n\t}\n\t\n\tpublic void TakeDamage(float damage){\n\t\thealthAmount -= damage;\n\t\thealthBar.fillAmount = healtAmount / 100f;\n\t}\n\tpublic void Heal(float healingAmount){\n\t\thealthAmount += healingAmount;\n\t\thealtAmount = Mathf.Clamp(healtAmount, 0, 100f);\n\t\thealthBar.fillAmount = healtAmount/100f;\n\t}\n}\n\n"},{"title":"Scene Movement","content":"SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);"},{"title":"Camera Switcher","content":" The script is designed to work with the main camera and an additional camera (m_CameraTwo). Upon pressing the 'L' key, the script checks the status of the main camera and switches to the other camera accordingly, effectively enabling and disabling the cameras based on the key input. \r\n\r\n\tpublic class Example: MonoBehaviour{\r\n\t\tCamera m_MainCamera;\r\n\t\tpublic Camera m_CameraTwo;\r\n\t\t\r\n\t\tvoid Start(){\r\n\t\t\t//this gets the main camera form the scene\r\n\t\t\tm_MainCamera = Camera.main;\r\n\t\t\t\r\n\t\t\t//this enables Main Camera\r\n\t\t\tm_MainCamera.enabled = true;\r\n\t\t\t//use this to disable secondary camera\r\n\t\t\tm_CameraTwo.enabled = false;\r\n\t\t}\r\n\t\tvoid Update(){\r\n\t\t\t//press l button to switch camera\r\n\t\t\tif(Input.GetKeyDown(KeyCode.L)){\r\n\t\t\t\t//check that the main camera is enabled in the scene, then switch to the other camera on a key press\r\n\t\t\t\tif(m_MainCamera.enabled){\r\n\t\t\t\t\tm_CameraTwo.enabled = true;\r\n\t\t\t\t\tm_MainCamera.enabled = false;\r\n\t\t\t\t}\r\n\t\t\t\t//otherwise if the main camera is not enabled, switch back to the main camera on a key press\r\n\t\t\t\telse if(!m_MainCamera.enabled){\r\n\t\t\t\t\tm_CameraTwo.enabled = false;\r\n\t\t\t\t\tm_MainCamera.enabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}"},{"title":"Animate through changing the Sprites 45.27 - Dino","content":"class AnimateSprite : MonoBehaviour{\r\n\t\t\tpublic Sprite[] sprites;\r\n\t\t\tpublic SpriteRenderer spriteRenderer;\r\n\t\t\tint frame;\r\n\t\t\tpublic void Awake(){\r\n\t\t\t\tspriteRenderer = GetComponent<SpriteRenderer>();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpublic void onEnable(){\r\n\t\t\t\tInvoke(nameof(Animate), 1f);\t\r\n\t\t\t}\r\n\t\t\tpublic void onDisable(){\r\n\t\t\t\tCancelInvoke();\r\n\t\t\t}\r\n\t\t\tprivate void Animate(){\r\n\t\t\t\tframe++;\r\n\t\t\t\t\r\n\t\t\t\tif(frame >= sprites.Length) frame=0;\r\n\t\t\t\tif(frame >=0 && frame < sprites.Length)\r\n\t\t\t\t\tspriteRenderer.sprite = sprites[frame];\r\n\t\t\t\t\t\r\n\t\t\t\tInvoke(nameof(Animate), 1f/GameManager.Instance.gameSpeed)\r\n\t\t\t}\r\n\t\t}"},{"title":"sample multiple image upload","content":"content","images":["uploads/8f3fe1dfa9fad77a21985a0950af50be","uploads/0e04ecc24bea46a5cf0c3d55ffb587a1","uploads/1ead55120bb5953a0433a70ce638c0e5"]},{"title":"Simple Movement 3D ","content":"Jump using RigidBody Velocity and Movement through Input.GetAxis\r\n\r\nRigidBody rb;\r\nvoid Update(){\r\n    float horizantalInput = Input.GetAxis(\"Horizontal\");\r\n    float verticalInput = Input.GetAxis(\"Vertical\");\r\n    rb.velocity = new Vector3(horizonatlInput * movementSpeed, rb.velocity.y, verticalInput*movementSpeed);\r\n    if(Input.GetButtonDown(\"Jump\") //get the value from Input Manager{\r\n        rb.velocity = new Vector3(rb.velocity.x, jumpforce, rb.velocity.z);\r\n    }\r\n}","images":[]},{"title":"Simple left, right Movement using a Point ","content":"Vector3.MoveToWards, Vector3.Distance, Array of GameObject for wayPoints","images":["uploads/ba98a99c639002a048264a0edd97ab6e"]}]